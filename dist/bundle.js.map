{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://anchor-interceptor/./src/Animator.ts","webpack://anchor-interceptor/./src/AnchorInterceptor.ts","webpack://anchor-interceptor/./src/Utils.ts"],"sourcesContent":["/**\r\n * Animator\r\n * © Copyright 2017-2019, Tyler Seabury, All Rights reserved.\r\n * @author Tyler Seabury, tylerseabury@protonomail.com, tylerseabury@gmail.com\r\n * @authorURL https://github.com/TJSeabury/\r\n * @version 1.2.0\r\n */\r\nexport class Animator {\r\n    frameRate: number;\r\n    easings = {\r\n        quadIn: (timeIndex: number) => {\r\n            return timeIndex ** 2;\r\n        },\r\n        circIn: (timeIndex: number) => {\r\n            return 1 - Math.sin(Math.acos(timeIndex));\r\n        },\r\n        quadOut: this.makeEaseOut(\r\n            (timeIndex: number) => {\r\n                return timeIndex ** 2;\r\n            }\r\n        ),\r\n        circOut: this.makeEaseOut(\r\n            (timeIndex: number) => {\r\n                return 1 - Math.sin(Math.acos(timeIndex));\r\n            }\r\n        ),\r\n        quadInOut: this.makeEaseInOut(\r\n            (timeIndex: number) => {\r\n                return timeIndex ** 2;\r\n            }\r\n        ),\r\n        circInOut: this.makeEaseInOut(\r\n            (timeIndex: number) => {\r\n                return 1 - Math.sin(Math.acos(timeIndex));\r\n            }\r\n        ),\r\n        linear: (timeIndex: number) => {\r\n            return timeIndex;\r\n        },\r\n    };\r\n    constructor(frameRate: number) {\r\n        this.frameRate = frameRate;\r\n    }\r\n\r\n    animate(config: {\r\n        easing: (x: number) => number,\r\n        draw: (t: number) => void,\r\n        duration: number,\r\n        loop: boolean\r\n    }): void {\r\n        const startTime = performance.now();\r\n        const endTime = startTime + config.duration;\r\n        const interFrameTime = 1000 / this.frameRate;\r\n        let timeNow = startTime;\r\n        let timeLast = timeNow;\r\n        let deltaTime = timeNow - timeLast;\r\n        let timeIndex = timeNow - startTime;\r\n        const render = () => {\r\n            if (deltaTime >= interFrameTime) {\r\n                timeLast = timeNow;\r\n                let timeFraction = timeIndex / config.duration;\r\n                try {\r\n                    config.draw(timeFraction);\r\n                }\r\n                catch (err) {\r\n                    console.error('Animation failed with error: ', err);\r\n                }\r\n            }\r\n            timeNow = performance.now();\r\n            deltaTime = timeNow - timeLast;\r\n            timeIndex = timeNow - startTime;\r\n            if (timeNow < endTime) {\r\n                requestAnimationFrame(render);\r\n            }\r\n            else {\r\n                config.draw(1);\r\n                if (true === config.loop) this.animate(config);\r\n            }\r\n        };\r\n        requestAnimationFrame(render);\r\n    }\r\n\r\n    makeEaseOut(timing: (x: number) => number) {\r\n        return function (timeIndex: number): number {\r\n            return 1 - timing(1 - timeIndex);\r\n        };\r\n    }\r\n\r\n    makeEaseInOut(timing: (x: number) => number) {\r\n        return function (timeIndex: number): number {\r\n            if (timeIndex < 0.5) {\r\n                return timing(2 * timeIndex) / 2;\r\n            }\r\n            else {\r\n                return (2 - timing(2 * (1 - timeIndex))) / 2;\r\n            }\r\n        };\r\n    }\r\n\r\n}","import { Animator } from './Animator';\r\nimport Utils from './Utils';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        a: Animator;\r\n    }\r\n}\r\n\r\n/**\r\n * Anchor Interceptor\r\n * © Copyright 2017-2018, Tyler Seabury, All Rights reserved.\r\n * @author Tyler Seabury, tylerseabury@protonomail.com, tylerseabury@gmail.com\r\n * @authorURL https://github.com/TJSeabury/\r\n * @version 1.2.0\r\n */\r\nexport class AnchorInterceptor {\r\n\r\n    static targetClassname = 'js-smooth-scroll';\r\n\r\n    headerOffset: number;\r\n    targets: string[];\r\n    a: Animator;\r\n    header: HTMLElement;\r\n\r\n    /**\r\n     * Interceptor constructor may be called with a css selector string \r\n     * that targets the header or nav that is used when calculating \r\n     * scroll offsets; e.g., '.mk-header.header-style-1'; an array of\r\n     * classes must also be provided for interception targets. If an empty\r\n     * targets array is provided all click events on anchors will be intercepted.\r\n     * ( Quite obviously, that can lead to undesireble conflicting behavior, but one \r\n     * may do that if they wished. )\r\n     * Usage example: \r\n     * \r\n     * const interceptor = new AnchorInterceptor(\r\n     *      false,\r\n     *      [\r\n     *          'smoothScrollThis',\r\n     *          'js-smooth-scroll'\r\n     *      ]\r\n     * );\r\n     *\r\n     */\r\n    constructor(headerQueryString: string, targets = [AnchorInterceptor.targetClassname]) {\r\n        this.a = window.a || (window.a = new Animator(20));\r\n\r\n        this.header = (\r\n            function (hqs) {\r\n                if (!hqs) return null;\r\n                let header = document.querySelector(hqs);\r\n                if (undefined !== header || null !== header) {\r\n                    return header as HTMLElement;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        )(headerQueryString);\r\n\r\n        this.headerOffset = this.header ? this.header.offsetHeight : 0;\r\n\r\n        this.targets = targets;\r\n\r\n        for (const t of this.targets) {\r\n            const links = Array.from(document.querySelectorAll(t));\r\n            for (const l of links) {\r\n                if (l.localName !== 'a') {\r\n                    const a = l.querySelector('a');\r\n                    if (!a.classList.contains(AnchorInterceptor.targetClassname)) {\r\n                        a.classList.add(AnchorInterceptor.targetClassname);\r\n                    }\r\n                    l.classList.remove(t);\r\n                } else {\r\n                    if (!l.classList.contains(AnchorInterceptor.targetClassname)) {\r\n                        l.classList.add(AnchorInterceptor.targetClassname);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (true === this.checkForTarget()) {\r\n            window.addEventListener(\r\n                'load',\r\n                () => {\r\n                    this.doAnimate(this.getTarget());\r\n                }\r\n            );\r\n        }\r\n        window.addEventListener(\r\n            'click',\r\n            ev => {\r\n                this.clickHandler(ev);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    setTarget(anchorTarget: string): void {\r\n        sessionStorage.setItem('anchorTarget', anchorTarget);\r\n    }\r\n\r\n    getTarget(): string {\r\n        return sessionStorage.getItem('anchorTarget');\r\n    }\r\n    removeTarget(): boolean {\r\n        if (sessionStorage.getItem('anchorTarget')) {\r\n            sessionStorage.removeItem('anchorTarget');\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    checkForTarget(): boolean {\r\n        if (null !== sessionStorage.getItem('anchorTarget') &&\r\n            '' !== sessionStorage.getItem('anchorTarget')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getLinkFromTarget(target: HTMLElement): HTMLAnchorElement {\r\n        if (null === target) return null;\r\n        while (false === target instanceof HTMLAnchorElement) {\r\n            target = target.parentElement;\r\n            if (null === target) {\r\n                return null;\r\n            }\r\n        }\r\n        return <HTMLAnchorElement>target;\r\n    }\r\n\r\n    getStripURL(url: string): string {\r\n        const strippedURL = url.substring(0, url.indexOf('#')) || url;\r\n        return (\r\n            strippedURL.charAt(strippedURL.length - 1) === '/' ?\r\n                strippedURL :\r\n                strippedURL + '/'\r\n        );\r\n    }\r\n\r\n    getTargetID(link: HTMLAnchorElement): string | null {\r\n        const target = link.href.substring(link.href.indexOf('#') + 1);\r\n        // We actually need to test for several cases here to account\r\n        // for hash and hashbang routing in SPAs.\r\n        if ('/' === target[0]) return null;\r\n        else if ('!' === target[0]) return null;\r\n        return target;\r\n    }\r\n\r\n    doNavigate(url: string): void {\r\n        window.location.href = url;\r\n    }\r\n\r\n    doAnimate(id: string): void {\r\n        const anchorTarget = document.getElementById(id);\r\n        if (undefined === anchorTarget) {\r\n            return;\r\n        }\r\n        let deltaY: number = this.getScrollAmount(anchorTarget) - this.headerOffset;\r\n        if (0 === deltaY) {\r\n            this.removeTarget();\r\n            return;\r\n        }\r\n        this.a.animate({\r\n            duration: 1000,\r\n            easing: this.a.easings.quadInOut,\r\n            draw: (p: number) => {\r\n                this.headerOffset = this.header ? this.header.offsetHeight : 0;\r\n                deltaY = this.getScrollAmount(anchorTarget) - this.headerOffset;\r\n                document.documentElement.scrollTop += deltaY * p;\r\n                document.body.scrollTop += deltaY * p;\r\n            },\r\n            loop: false\r\n        });\r\n        this.removeTarget();\r\n        return;\r\n    }\r\n\r\n    getScrollAmount(t: HTMLElement): number {\r\n        return t.getBoundingClientRect().top;\r\n    }\r\n\r\n    hasIntersectingClass(A: Array<String>, B: Array<String>): Boolean {\r\n        if (Utils.intersect(A, B).length > 0) return true;\r\n        return false;\r\n    }\r\n\r\n    clickHandler(event: Event) {\r\n        // Most click events will exit here.\r\n        const link = this.getLinkFromTarget(event.target as HTMLElement);\r\n        if (null === link) {\r\n            return;\r\n        }\r\n        // Exit if the link is not a valid target for interception.\r\n        if (this.targets.length > 0\r\n            && !this.hasIntersectingClass(\r\n                Array.from(link.classList),\r\n                [AnchorInterceptor.targetClassname])\r\n        ) {\r\n            return;\r\n        }\r\n        // Handle a real link click.\r\n        event.preventDefault();\r\n        const url = link.href;\r\n        const cleanURL = this.getStripURL(link.href);\r\n        const cleanLocatation = this.getStripURL(window.location.href);\r\n        const id = this.getTargetID(link);\r\n        if (null === id) {\r\n            console.log(url);\r\n            this.doNavigate(url);\r\n        }\r\n        else if (cleanURL === cleanLocatation) {\r\n            this.doAnimate(id);\r\n        }\r\n        else {\r\n            this.setTarget(id);\r\n            this.doNavigate(cleanURL);\r\n        }\r\n    }\r\n}","export default class Utils {\r\n    static intersect(a: any[], b: any[]): any[] {\r\n        return a.filter(x => b.includes(x));\r\n    }\r\n\r\n    static difference(a: any[], b: any[]): any[] {\r\n        return a.filter(x => !b.includes(x));\r\n    }\r\n\r\n    static symetricDifference(a: any[], b: any[]): any[] {\r\n        return this.difference(a, b).concat(this.difference(b, a));\r\n    }\r\n\r\n    static union(a: any[], b: any[]): any[] {\r\n        return [...new Set([...a, ...b])];\r\n    }\r\n}"],"names":["Animator","constructor","frameRate","easings","quadIn","timeIndex","circIn","Math","sin","acos","quadOut","this","makeEaseOut","circOut","quadInOut","makeEaseInOut","circInOut","linear","animate","config","startTime","performance","now","endTime","duration","interFrameTime","timeNow","timeLast","deltaTime","render","timeFraction","draw","err","console","error","requestAnimationFrame","loop","timing","headerQueryString","targets","targetClassname","a","window","header","hqs","document","querySelector","undefined","headerOffset","offsetHeight","t","links","Array","from","querySelectorAll","l","localName","classList","contains","add","remove","checkForTarget","addEventListener","doAnimate","getTarget","ev","clickHandler","setTarget","anchorTarget","sessionStorage","setItem","getItem","removeTarget","removeItem","getLinkFromTarget","target","HTMLAnchorElement","parentElement","getStripURL","url","strippedURL","substring","indexOf","charAt","length","getTargetID","link","href","doNavigate","location","id","getElementById","deltaY","getScrollAmount","easing","p","documentElement","scrollTop","body","getBoundingClientRect","top","hasIntersectingClass","A","B","static","b","filter","x","includes","difference","concat","Set","intersect","event","preventDefault","cleanURL","cleanLocatation","log"],"sourceRoot":""}